# The following types define the data model of the example service
# based on which the GraphQL API is generated


type Brand @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String!
  products: [Product!]! @relation(name: "BrandProducts")

  boost: Int! @defaultValue(value: 0)
  isHidden: Boolean! @defaultValue(value: "false")
  notes: String
}


type Product @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String!
  brand: Brand! @relation(name: "BrandProducts")

  thriveListings: [ThriveProduct!]! @relation(name: "ThriveListings")

  lastVerifiedAt: DateTime
  isAffiliate: Boolean! @defaultValue(value: "false")
  isHidden: Boolean! @defaultValue(value: "false")
  notes: String
}


type ThriveProduct @model {
  id: ID! @isUnique
  createdAt: DateTime!
  updatedAt: DateTime!

  listing: Product @relation(name: "ThriveListings")
  name: String!
  brandName: String!
  url: String! @isUnique
  sku: String! @isUnique
  package: String!
  image: String!
  price: Float!

  matchStatus: MATCH_STATUS! @defaultValue(value: PENDING)
  matchScore: MATCH_SCORE! @defaultValue(value: UNKNOWN)
}


enum MATCH_STATUS {
  PENDING
  NEEDS_REVIEW
  MATCHED
  INVALID
  NONE
}

enum MATCH_SCORE {
  UNKNOWN
  PERFECT
  POSSIBLE
  NONE
}
